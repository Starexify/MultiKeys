import funkin.modding.base.ScriptedFlxSubState;
import funkin.modding.events.ScriptEvent;
import funkin.modding.module.ScriptedModule;
import funkin.save.Save;
import funkin.ui.options.OptionsState;

import flixel.FlxG;

class MultikeyOptions extends ScriptedModule {
    var multikeysOptions:Null<MultikeySaveData> = Save.instance.modOptions.get("multikeys");

    var DEFAULT_KEYBINDS:MultikeySaveData = {
        controls: [
            [[32, 0]],
            [[68, 0], [75, 0]],
            [[68, 0], [32, 0], [75, 0]],
            [[68, 0], [70, 0], [74, 0], [75, 0]],
            [[68, 0], [70, 0], [32, 0], [74, 0], [75, 0]],
            [[83, 0], [68, 0], [70, 0], [74, 0], [75, 0], [76, 0]],
            [[83, 0], [68, 0], [70, 0], [32, 0], [74, 0], [75, 0], [76, 0]],
            [[65, 0], [83, 0], [68, 0], [70, 0], [72, 0], [74, 0], [75, 0], [76, 0]],
            [[65, 0], [83, 0], [68, 0], [70, 0], [32, 0], [72, 0], [74, 0], [75, 0], [76, 0]],
        ]
    };

    function new() {
        super("MultikeyOptions", 999);
        if (!Save.instance.modOptions.exists("multikeys")) Save.instance.modOptions.set("multikeys", DEFAULT_KEYBINDS);
        Save.instance.flush();
    }

    override function onStateChangeEnd(event:StateChangeScriptEvent) {
        if (Std.isOfType(event.targetState, OptionsState)) {
            // MultiKeys Controls Entry
            var options:OptionsMenu = event.targetState.optionsCodex.get_currentPage();
            for (optionEntries in options.items.members) optionEntries.y -= 80;
            var lastItems = [
                options.items.members[options.items.length - 4], // input offset
                options.items.members[options.items.length - 3], // ngLogin
                options.items.members[options.items.length - 2], // clearSave
                options.items.members[options.items.length - 1] // exit
            ];
            lastItems[0].y += 100; // input offset
            lastItems[1].y += 100; // ngLogin
            lastItems[2].y += 100; // clearSave
            lastItems[3].y += 110; // exit
            for (item in lastItems) options.items.remove(item);
            var mkControls = options.items.createItem(0, (options.items.length - 4) * 100 + 20, "Multikey Controls", "bold", () -> FlxG.state.openSubState(ScriptedFlxSubState.init("MultikeyControls")));
            mkControls.x = (FlxG.width - mkControls.width) / 2;
            for (item in lastItems) options.items.add(item);
        }
    }

}

typedef MultikeySaveData = {
    controls:Array<Array<Array<Int>>>
}